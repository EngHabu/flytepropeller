name: Pull Request

on:
  pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        go-version: [1.13]
    steps:
      - uses: actions/checkout@v1
      - name: Push Docker Image to Github Registry
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          image_name: ${{ secrets.flytegithub_repo }}/operator
          image_tag: ${{ github.sha }}
          push_git_tag: true
          registry: docker.pkg.github.com
      - uses: engineerd/setup-kind@v0.4.0
      - name: End2End
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          PROPELLER=${{ secrets.flytegithub_repo }}/operator:${{ github.sha }} make end2end_execute
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Unit Tests
        uses: cedrickring/golang-action@1.5.2
        env:
          GO111MODULE: "on"
        with:
          args: make install && make test_unit_codecov
      - uses: codecov/codecov-action@v1
        with:
          file: coverage.txt
          flags: unittests
          fail_ci_if_error: true

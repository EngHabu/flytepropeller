// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MutableTaskNodeStatus is an autogenerated mock type for the MutableTaskNodeStatus type
type MutableTaskNodeStatus struct {
	mock.Mock
}

// GetBarrierClockTick provides a mock function with given fields:
func (_m *MutableTaskNodeStatus) GetBarrierClockTick() uint32 {
	ret := _m.Called()

	var r0 uint32
	if rf, ok := ret.Get(0).(func() uint32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint32)
	}

	return r0
}

// GetPhase provides a mock function with given fields:
func (_m *MutableTaskNodeStatus) GetPhase() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetPhaseVersion provides a mock function with given fields:
func (_m *MutableTaskNodeStatus) GetPhaseVersion() uint32 {
	ret := _m.Called()

	var r0 uint32
	if rf, ok := ret.Get(0).(func() uint32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint32)
	}

	return r0
}

// GetPluginState provides a mock function with given fields:
func (_m *MutableTaskNodeStatus) GetPluginState() []byte {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// GetPluginStateVersion provides a mock function with given fields:
func (_m *MutableTaskNodeStatus) GetPluginStateVersion() uint32 {
	ret := _m.Called()

	var r0 uint32
	if rf, ok := ret.Get(0).(func() uint32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint32)
	}

	return r0
}

// SetBarrierClockTick provides a mock function with given fields: tick
func (_m *MutableTaskNodeStatus) SetBarrierClockTick(tick uint32) {
	_m.Called(tick)
}

// SetPhase provides a mock function with given fields: phase
func (_m *MutableTaskNodeStatus) SetPhase(phase int) {
	_m.Called(phase)
}

// SetPhaseVersion provides a mock function with given fields: version
func (_m *MutableTaskNodeStatus) SetPhaseVersion(version uint32) {
	_m.Called(version)
}

// SetPluginState provides a mock function with given fields: _a0
func (_m *MutableTaskNodeStatus) SetPluginState(_a0 []byte) {
	_m.Called(_a0)
}

// SetPluginStateVersion provides a mock function with given fields: _a0
func (_m *MutableTaskNodeStatus) SetPluginStateVersion(_a0 uint32) {
	_m.Called(_a0)
}

// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import core "github.com/lyft/flyteidl/gen/pb-go/flyteidl/core"
import mock "github.com/stretchr/testify/mock"

import v1alpha1 "github.com/lyft/flytepropeller/pkg/apis/flyteworkflow/v1alpha1"

// OutputResolver is an autogenerated mock type for the OutputResolver type
type OutputResolver struct {
	mock.Mock
}

// ExtractOutput provides a mock function with given fields: ctx, w, n, bindToVar
func (_m *OutputResolver) ExtractOutput(ctx context.Context, w v1alpha1.ExecutableWorkflow, n v1alpha1.ExecutableNode, bindToVar string) (*core.Literal, error) {
	ret := _m.Called(ctx, w, n, bindToVar)

	var r0 *core.Literal
	if rf, ok := ret.Get(0).(func(context.Context, v1alpha1.ExecutableWorkflow, v1alpha1.ExecutableNode, string) *core.Literal); ok {
		r0 = rf(ctx, w, n, bindToVar)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*core.Literal)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, v1alpha1.ExecutableWorkflow, v1alpha1.ExecutableNode, string) error); ok {
		r1 = rf(ctx, w, n, bindToVar)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

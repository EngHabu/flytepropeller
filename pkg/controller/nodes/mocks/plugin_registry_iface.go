// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import core "github.com/lyft/flyteplugins/go/tasks/pluginmachinery/core"
import k8s "github.com/lyft/flyteplugins/go/tasks/pluginmachinery/k8s"
import mock "github.com/stretchr/testify/mock"

// PluginRegistryIface is an autogenerated mock type for the PluginRegistryIface type
type PluginRegistryIface struct {
	mock.Mock
}

// GetCorePlugins provides a mock function with given fields:
func (_m *PluginRegistryIface) GetCorePlugins() []core.PluginEntry {
	ret := _m.Called()

	var r0 []core.PluginEntry
	if rf, ok := ret.Get(0).(func() []core.PluginEntry); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]core.PluginEntry)
		}
	}

	return r0
}

// GetK8sPlugins provides a mock function with given fields:
func (_m *PluginRegistryIface) GetK8sPlugins() []k8s.PluginEntry {
	ret := _m.Called()

	var r0 []k8s.PluginEntry
	if rf, ok := ret.Get(0).(func() []k8s.PluginEntry); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]k8s.PluginEntry)
		}
	}

	return r0
}
